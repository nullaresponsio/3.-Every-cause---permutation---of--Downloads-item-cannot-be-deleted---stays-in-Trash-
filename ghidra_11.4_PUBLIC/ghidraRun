#!/usr/bin/env bash
#----------------------------------------
# Ghidra launch with automatic JDK 21+ detection (ARM-only + plugin fallback)
#----------------------------------------

#MAXMEM=2G

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ "$SOURCE" != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"

HOST_OS="$(uname)"
ARCH="$(uname -m)"

detect_java_home_mac() {
  if [[ "$ARCH" == "arm64" ]]; then
    /usr/libexec/java_home -v "21+" -arch arm64 2>/dev/null
  else
    /usr/libexec/java_home -v "21+" 2>/dev/null
  fi
}

detect_java_home_linux() {
  local java_cmd version major
  java_cmd=$(command -v java 2>/dev/null) || return
  java_cmd=$(readlink -f "$java_cmd")
  version=$("$java_cmd" -version 2>&1 | awk -F\" '/version/ {print $2}')
  major=${version%%.*}
  if [[ $major -ge 21 ]]; then
    dirname "$(dirname "$java_cmd")"
  fi
}

JAVA_HOME_CANDIDATE=""
if [[ "$HOST_OS" == "Darwin" ]]; then
  JAVA_HOME_CANDIDATE=$(detect_java_home_mac)
elif [[ "$HOST_OS" == "Linux" ]]; then
  JAVA_HOME_CANDIDATE=$(detect_java_home_linux)
fi

# fallback to plugin path if no JDK 21+ was found
if [[ -z "$JAVA_HOME_CANDIDATE" && -d "/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home" ]]; then
  JAVA_HOME_CANDIDATE="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
fi

if [[ -n "$JAVA_HOME_CANDIDATE" ]]; then
  JAVA_HOME="$JAVA_HOME_CANDIDATE"
else
  echo "ERROR: JDK 21+ (64-bit) could not be found."
  echo "Please install a supported JDK or set JAVA_HOME to your JDK 21+ installation path."
  exit 1
fi

export JAVA_HOME
exec "${SCRIPT_DIR}/support/launch.sh" \
  bg jdk Ghidra "${MAXMEM:-}" "${JAVA_HOME}" ghidra.GhidraRun "$@"
