#!/usr/bin/env bash
# run_mapping_r2.sh – static sweep of macOS components for
#                     Trash‑related strings, imports and symbols.
#
# This extends the original script by
# • scanning additional daemons (CloudDocs, mdworker, Spotlight…)
# • dropping a temporary r2 script generated by mapping.py
# • tee'ing colour‑less output into a single log for review.
#
# Usage:
#     chmod +x mapping.py run_mapping_r2.sh
#     ./run_mapping_r2.sh          # results in $TMP.log
set -euo pipefail

PY="$(dirname "$0")/mapping.py"

# ────────────────────────────────────────────────────────────
# 1.  Binaries worth scanning
#    (original list + extra user‑space actors)
# ────────────────────────────────────────────────────────────
BINS=(
  "/System/Library/Preboot/"*"/boot.efi"
  "/System/Library/Kernels/kernel"
  "/sbin/launchd"
  "/System/Library/CoreServices/Finder.app/Contents/MacOS/Finder"
  "/System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/Versions/A/Resources/WindowServer"
  "/System/Library/Extensions/apfs.kext/Contents/MacOS/apfs"
  "/System/Library/Extensions/IONVMeFamily.kext/Contents/MacOS/IONVMeFamily"
  #  ↓ NEW – agents that often lock or veto deletions
  "/System/Library/PrivateFrameworks/CloudDocsDaemon.framework/Versions/A/CloudDocsDaemon"
  "/System/Library/PrivateFrameworks/Spotlight.framework/Versions/A/Spotlight"
  "/usr/libexec/mdworker"
  "/usr/libexec/acl"
)

# ────────────────────────────────────────────────────────────
# 2.  Generate a one‑shot radare2 script containing all searches
# ────────────────────────────────────────────────────────────
TMP=$(mktemp "/tmp/trashmap.XXXXXX")
python3 "$PY" > "$TMP"

LOG="${TMP}.log"
: > "$LOG"  # truncate

# ────────────────────────────────────────────────────────────
# 3.  Scan each binary
#     -2 : quiet mode (no 'hit[0]' summaries)
#      -q: exit after script execution
# ────────────────────────────────────────────────────────────
for BIN in "${BINS[@]}"; do
  if [[ -f "$BIN" ]]; then
    printf "======= %s =======\n" "$BIN"       | tee -a "$LOG"
    r2 -2 -q -i "$TMP" "$BIN"                  | tee -a "$LOG"
    printf "\n"                                | tee -a "$LOG"
  fi
done

echo "Complete log: $LOG"
